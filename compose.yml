version: "3.9"

name: "project-local"

networks:
  local:
    driver: "bridge"
    name: ${NETWORK_NAME_LOCAL:-local_network}

volumes:
  mysql_data:
    driver: "local"
    name: "${MYSQL_DB_VOLUME_DATA_NAME:-mysql_data}"
    
  pgsql_data:
    driver: "local"
    name: "${PGSQL_DB_VOLUME_DATA_NAME:-pgsql_data}"

  mongo_data:
    driver: "local"
    name: "${MONGO_DB_VOLUME_DATA_NAME:-mongo_data}"

  redis_data:
    driver: "local"
    name: "${REDIS_DB_VOLUME_DATA_NAME:-redis_data}"

  redis_insight_data:
    driver: "local"
    name: "${REDIS_INSIGHT_VOLUME_DATA_NAME:-redis_insight_data}"


services:
  
  # MySQL
  mysql:
    image: "${MYSQL_IMAGE_NAME}"
    container_name: "${MYSQL_DB_CONTAINER_NAME}"
    command: --default-authentication-plugin=caching_sha2_password
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "${MYSQL_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DB_DATABASE:-local}"
      MYSQL_USER: "${MYSQL_DB_USERNAME}"
      MYSQL_PASSWORD: "${MYSQL_DB_PASSWORD}"
      # MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_DB_ROOT_PASSWORD}"]
      retries: 3
      timeout: 5s
    networks:
      - ${MYSQL_NETWORK_NAME}
    platform: linux/x86_64
    ports:
     - ${MYSQL_DB_PORT:-3306}:3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./databases/mysql/scripts/sakila-schema.sql:/docker-entrypoint-initdb.d/01_sakila-schema.sql
      - ./databases/mysql/scripts/sakila-data.sql:/docker-entrypoint-initdb.d/02_sakila-data.sql
  
  # Postgres
  pgsql:
    image: "${PGSQL_IMAGE_NAME}"
    container_name: "${PGSQL_DB_CONTAINER_NAME}"
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: "${PGSQL_DB_DATABASE:-local}"
      POSTGRES_USER: "${PGSQL_DB_USERNAME}"
      POSTGRES_PASSWORD: "${PGSQL_DB_PASSWORD}"
    healthcheck:
      test: [
        "CMD", "pg_isready", "-q",
        "-d", "${PGSQL_DB_DATABASE:-local}",
        "-U", "${PGSQL_DB_USERNAME}"
      ]
      retries: 3
      timeout: 5s
    networks:
      - ${PGSQL_NETWORK_NAME}
    ports:
     - ${PGSQL_DB_PORT:-5432}:5432
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - ./databases/postgres/scripts/sakila-schema.sql:/docker-entrypoint-initdb.d/01_sakila-schema.sql
      - ./databases/postgres/scripts/sakila-data.sql:/docker-entrypoint-initdb.d/02_sakila-data.sql
  
  # Redis
  redis:
    image: "${REDIS_IMAGE_NAME}"
    container_name: "${REDIS_DB_CONTAINER_NAME}"
    env_file:
      - ./.env
    command: redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_DB_PASSWORD}"
    ports:
      - ${REDIS_DB_PORT:-6379}:6379
    volumes:
      - redis_data:/data      
    networks:
      - ${REDIS_NETWORK_NAME}

  # MSSQL
  mssql:
    build:
      dockerfile: ./databases/mssql/dockerfile
      context: .
    container_name: "${MSSQL_DB_CONTAINER_NAME}"
    env_file:
      - ./.env
    environment:
      SA_PASSWORD: "${MSSQL_DB_ROOT_PASSWORD}"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "${MSSQL_DB_PID}"
      BAK_FILE: "${MSSQL_DB_BAK_FILE}"
    ports:
      - ${MSSQL_DB_PORT:-1433}:1433
    networks:
      - ${MSSQL_NETWORK_NAME}
  
  # MongoDB
  mongo:
    image: "${MONGO_IMAGE_NAME}"
    container_name: "${MONGO_DB_CONTAINER_NAME:-mongo_db}"
    # command: "mongo -u ${MONGO_DB_USERNAME:-root} -p ${MONGO_DB_PASSWORD} --authenticationDatabase admin"
    env_file:
      - ./.env
    volumes:
      - mongo_data:/data/db
    ports:
      - ${MONGO_DB_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_DB_USERNAME:-root}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_DB_PASSWORD}"
    networks:
      - ${MONGO_NETWORK_NAME}

  mongo-express:
    image: ${MONGO_EXPRESS_IMAGE_NAME}
    container_name: "${MONGO_EXPRESS_CONTAINER_NAME:-mongo_ui}"
    env_file:
      - ./.env
    ports:
      - ${MONGO_EXPRESS_UI_PORT:-9002}:8081
    environment:
      ME_CONFIG_MONGODB_URL: "${MONGO_EXPRESS_URL:-mongodb://${MONGO_DB_USERNAME:-root}:${MONGO_DB_PASSWORD}@mongo:${MONGO_DB_PORT}/?authSource=admin}"
      ME_CONFIG_BASICAUTH_USERNAME: "${MONGO_EXPRESS_USERNAME}"
      ME_CONFIG_BASICAUTH_PASSWORD: "${MONGO_EXPRESS_PASSWORD}"
      ME_CONFIG_MONGODB_PORT: ${MONGO_DB_PORT:-27017}
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_DB_USERNAME:-root}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_DB_PASSWORD}"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "${MONGO_EXPRESS_ENABLE_ADMIN}"
    links:
      - mongo
    networks:
      - ${MONGO_EXPRESS_NETWORK_NAME}

  # Adminer
  adminer:
    image: ${ADMINER_IMAGE_NAME:-adminer}
    container_name: "${ADMINER_CONTAINER_NAME:-adminer_ui}"
    restart: always
    ports:
      - ${ADMINER_UI_PORT:-9000}:8080
    networks:
      - ${ADMINER_NETWORK_NAME}

  # PgAdmin
  pgadmin:
    image: ${PGADMIN_IMAGE_NAME:-dpage/pgadmin4:latest}
    container_name: "${PGADMIN_CONTAINER_NAME:-pgadmin_ui}"
    restart: always
    depends_on:
      - pgsql
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    ports:
      - ${PGADMIN_UI_PORT:-9001}:80
    networks:
      - ${PGADMIN_NETWORK_NAME}
    # volumes:
    #   - ./data/pgadmin:/var/lib/pgadmin      


  # RedisInsight
  redisinsight:
    image: ${REDISINSIGHT_IMAGE_NAME:-redis/redisinsight:latest}
    container_name: "${REDISINSIGHT_CONTAINER_NAME:-redisinsight_ui}"
    restart: always
    depends_on:
      - redis
    ports:
      - ${REDISINSIGHT_UI_PORT:-9004}:5540
    volumes:
      - redis_insight_data:/db
    networks:
      - ${REDIS_NETWORK_NAME}